{"version":3,"sources":["instance.js","Store.js","pages/Roles.js","pages/Form.js","pages/AllRoles.js","pages/New.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","headers","content-type","Accept","NameContext","React","createContext","RoleContext","RolesContext","Store","_ref","children","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","role","setRole","_useState5","_useState6","roles","setRoles","react_default","a","createElement","Provider","value","Roles","match","user","setUser","_useContext","useContext","_useContext2","myRoles","setMyRoles","useEffect","get","params","id","then","res","data","roleUpdate","role_id","post","user_id","className","iRoles","map","Button_default","onClick","key","size","variant","color","includes","e","Fragment","Form","_useContext3","_useContext5","_useContext6","newRole","resetForm","Grid_default","defineProperty","container","direction","justify","alignItems","item","xs","TextField_default","onKeyPress","ev","preventDefault","autoFocus","margin","onChange","persist","target","InputProps","endAdornment","InputAdornment_default","position","IconButton_default","edge","aria-label","Directions","Fab_default","Tooltip_default","title","Add","react_router_dom","to","ViewList","AllRoles","_useContext4","ListItem_default","ListItemText_default","primary","ListItemSecondaryAction_default","editRole","Edit","delete","concat","result","filter","val","Delete","New","pages_Form","md","Typography_default","List_default","pages_AllRoles","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_Store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8c43080.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `http://127.0.0.1:8000/`,\r\n    headers: {'content-type': 'application/json', 'Accept': 'application/json',},\r\n\r\n});\r\nexport default instance","import React, {useState} from 'react';\r\n\r\nexport const NameContext = React.createContext()\r\nexport const RoleContext = React.createContext()\r\nexport const RolesContext = React.createContext()\r\nconst Store = ({children}) => {\r\n    const [name, setName] = useState(null)\r\n    const [role, setRole] = useState({})\r\n    const [roles, setRoles] = useState([])\r\n    return (\r\n        <NameContext.Provider value={[name, setName]}>\r\n            <RoleContext.Provider value={[role, setRole]}>\r\n                <RolesContext.Provider value={[roles, setRoles]}>\r\n                    {children}\r\n                </RolesContext.Provider>\r\n            </RoleContext.Provider>\r\n        </NameContext.Provider>\r\n    )\r\n}\r\nexport default Store","import React, {useContext, useEffect, useState} from 'react';\r\nimport instance from \"../instance\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {RolesContext} from \"../Store\";\r\n\r\nconst Roles = ({match}) => {\r\n    const [user, setUser] = useState([])\r\n    const [roles, setRoles] = useContext(RolesContext)\r\n    const [myRoles, setMyRoles] = useState([])\r\n    useEffect(() => {\r\n        instance\r\n            .get('acr/roles/users', {\r\n                params: {id: match.params.id}\r\n            })\r\n            .then(function (res) {\r\n                setUser(res.data[0])\r\n                setRoles(res.data[1])\r\n                setMyRoles(res.data[2])\r\n            })\r\n    }, [])\r\n    const RolesView = () => {\r\n        const iRoles = myRoles[user.id];\r\n        try {\r\n            return roles.map(role =>\r\n                <Button onClick={() => roleUpdate(role.id)} key={role.id} size=\"small\" variant=\"contained\" color={iRoles ? iRoles.includes(role.id) ? 'primary' : 'default' : 'default'} className={`acr-1`}>{role.name}</Button>\r\n            )\r\n        } catch (e) {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const roleUpdate = (role_id) => {\r\n        instance\r\n            .post('acr/roles/update', {\r\n                user_id: user.id, role_id: role_id\r\n            })\r\n            .then(function (res) {\r\n                setMyRoles(res.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\" App\">\r\n            <RolesView/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Roles;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport instance from \"../instance\";\r\nimport {Directions, Add, ViewList} from '@material-ui/icons';\r\nimport {NameContext, RoleContext, RolesContext} from \"../Store\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Form = () => {\r\n    const [role, setRole] = useContext(RoleContext)\r\n    const [, setRoles] = useContext(RolesContext)\r\n    const [name, setName] = useContext(NameContext)\r\n    const newRole = () => {\r\n        instance\r\n            .post('acr/roles/new', {\r\n                id: role.id, name: name\r\n            })\r\n            .then(function (res) {\r\n                setRoles(res.data)\r\n                setName('')\r\n                setRole({})\r\n            })\r\n    }\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setName(e.target.value)\r\n    }\r\n    const resetForm = () => {\r\n        setName('')\r\n        setRole({})\r\n    }\r\n\r\n    return (\r\n        <Grid container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              container\r\n        >\r\n            <Grid item xs={8}>\r\n                <TextField\r\n                    onKeyPress={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            newRole()\r\n                            ev.preventDefault();\r\n                        }\r\n                    }}\r\n                    id=\"role.id\"\r\n                    value={name}\r\n                    autoFocus={true}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"Toggle password visibility\"\r\n                                    onClick={() => newRole()}\r\n                                    color={'primary'}\r\n                                >\r\n                                    <Directions/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid container  xs={4} direction=\"row\" alignItems=\"center\" justify=\"space-around\">\r\n                <Grid item xs={2}>\r\n                    <Fab onClick={() => resetForm()} color=\"secondary\" size=\"small\" aria-label=\"Add\">\r\n                        <Tooltip title=\"Add\" aria-label=\"Add\">\r\n                            <Add/>\r\n                        </Tooltip>\r\n                    </Fab>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Link to={'/acr/roles'}>\r\n                        <Fab onClick={() => resetForm()} color=\"primary\" size=\"small\" aria-label=\"List\">\r\n                            <Tooltip title=\"List\" aria-label=\"List\">\r\n                                <ViewList/>\r\n                            </Tooltip>\r\n                        </Fab>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, {useContext} from 'react';\r\nimport instance from \"../instance\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Delete, Edit} from '@material-ui/icons';\r\nimport {NameContext, RoleContext, RolesContext} from \"../Store\";\r\n\r\n\r\nconst AllRoles = () => {\r\n    const [, setRole] = useContext(RoleContext)\r\n    const [roles, setRoles] = useContext(RolesContext)\r\n    const [, setName] = useContext(NameContext)\r\n    const deleteRole = (id) => {\r\n        instance\r\n            .delete(`acr/roles/index/${id}`)\r\n            .then(function () {\r\n                    const result = roles.filter(val => val.id !== id)\r\n                    setRoles(result)\r\n                }\r\n            )\r\n    }\r\n\r\n    const editRole = (role) => {\r\n        setRole(role)\r\n        setName(role.name)\r\n    }\r\n    return roles.map(role =>\r\n        <ListItem key={role.id}>\r\n            <ListItemText\r\n                primary={role.name}\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton onClick={() => editRole(role)} edge=\"end\" aria-label=\"Edit\">\r\n                    <Edit/>\r\n                </IconButton>\r\n                <IconButton onClick={() => deleteRole(role.id)} edge=\"end\" aria-label=\"Delete\">\r\n                    <Delete/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default AllRoles;","import React, {useContext, useEffect, useState} from 'react';\r\nimport instance from \"../instance\";\r\nimport Form from \"./Form\";\r\nimport AllRoles from \"./AllRoles\";\r\nimport List from '@material-ui/core/List';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {RoleContext, RolesContext} from \"../Store\";\r\n\r\nconst New = () => {\r\n    const [role, setRole] = useContext(RoleContext)\r\n    const [, setRoles] = useContext(RolesContext)\r\n    useEffect(() => {\r\n        if (role.id) {\r\n            instance\r\n                .get(`acr/roles/index/${role.id}`)\r\n                .then(function (res) {\r\n                    setRole(res.data)\r\n                })\r\n        } else {\r\n            instance\r\n                .get(`acr/roles/index`)\r\n                .then(function (res) {\r\n                    setRoles(res.data)\r\n                })\r\n        }\r\n    }, [role.id])\r\n\r\n    return (\r\n        <div className=\" App\">\r\n            <Form/>\r\n\r\n            <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h6\">\r\n                    Roles\r\n                </Typography>\r\n                <div>\r\n                    <List>\r\n                        <AllRoles/>\r\n                    </List>\r\n                </div>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New;","import React from 'react';\nimport './acr.css';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Roles from \"./pages/Roles\";\nimport New from \"./pages/New\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path={'/acr/roles/user/:id'} component={Roles}/>\n                <Route exact path={'/acr/roles/new'} component={New}/>\n                <Route exact path={'/acr/roles/new/:id'} component={New}/>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Store from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Store>\n        <App/>\n    </Store>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}